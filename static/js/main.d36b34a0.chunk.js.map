{"version":3,"sources":["components/PersonLocation.js","config.js","components/UserShareComponent.js","components/FriendsListComponent.js","components/MeetUpRadiusComponent.js","components/AdditionalNotesTextComponent.js","utils/Friends.js","utils/GeneralUtils.js","utils/MapUtils.js","utils/DataStorage.js","App.js","reportWebVitals.js","index.js"],"names":["allowedDistanceRadius","user","location","name","color","console","log","Circle","center","lat","lng","pathOptions","stroke","weight","radius","Tooltip","direction","opacity","permanent","Marker","position","appURL","window","origin","defaultMapCenter","setUser","useState","copied","setCopied","nameValue","setNameValue","shareURL","id","className","type","readOnly","value","onClick","navigator","clipboard","writeText","placeholder","onChange","e","target","disabled","Swal","fire","icon","title","FriendListItem","friend","removeFriend","style","friends","length","map","setAllowedDistanceRadius","Number","parseInt","addFriendFromURL","setFriends","urlGetParams","URLSearchParams","search","newFriendId","get","filter","generatedRandomColor","i","Math","floor","random","getRandomColor","newFriend","parseFloat","GoToUser","hasCentered","setHasCentered","useMapEvents","click","locate","locationfound","a","panTo","latlng","getZoom","userLat","toFixed","userLng","shortid","generate","useEffect","localDB","localStorage","getFromStorage","key","defaultValue","JSON","parse","getItem","setStateAndStore","setStateFunction","setItem","stringify","App","setAllowedDistanceRadiusState","setUserState","setFriendsState","userLoaded","UserShareComponent","FriendsListComponent","friendToRemove","withoutFriend","MeetUpRadiusComponent","AdditionalNotesTextComponent","MapContainer","zoom","v","PersonLocation","TileLayer","attribution","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d36b34a0.chunk.js","sourcesContent":["import { Marker, Tooltip, Circle } from 'react-leaflet';\n\n\nexport default ({ allowedDistanceRadius, user = false, location, name, color }) => {\n\tconsole.log('adding marker', user, name, location)\n\n\treturn <>\n\n\t\t<Circle center={[location.lat, location.lng]} pathOptions={{ color: color, stroke: true, weight: 5 }} radius={allowedDistanceRadius}>\n\t\t\t<Tooltip direction=\"bottom\" opacity={1} permanent>\n\t\t\t\t{name}\n\t\t\t</Tooltip>\n\t\t\t<Marker  position={[location.lat, location.lng]}>\n\t\t\t</Marker>\n\t\t</Circle>\n\t</>\n}","\n\nexport const appURL = window.location.origin\n\nexport const defaultMapCenter = [-33.8688, 151.2093]","import { useState } from 'react'\nimport { appURL } from '../config'\nimport Swal from 'sweetalert2'\n\nexport default ({ user, setUser, allowedDistanceRadius }) => {\n\tconst [copied, setCopied] = useState(false)\n\tconst [nameValue, setNameValue] = useState(\"\")\n\n\tconst shareURL = `${appURL}?name=${user.name}&lat=${user.location.lat}&lng=${user.location.lng}&id=${user.id}`\n\n\tif (!user.name) {\n\t\treturn <div className=\"text-left\">\n\t\t\t<label className=\"block text-gray-700 font-bold mb-2 text-center w-full\">\n\t\t\t\tEnter your first name to share your {allowedDistanceRadius/1000}km radius with friends\n\t\t\t</label>\n\t\t\t<div className=\"w-full flex items-left\">\n\n\t\t\t\t<input className=\"shadow appearance-none border rounded w-full mr-2 py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\"\n\t\t\t\t\tid=\"getNameInput\" type=\"text\"\n\t\t\t\t\tplaceholder=\"first name\"\n\t\t\t\t\tonChange={(e) => setNameValue(e.target.value)}\n\t\t\t\t\tvalue={nameValue}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<button disabled={nameValue===\"\"} onClick={() => {\n\t\t\t\t\tsetUser({ ...user, name: nameValue}, ()=> {\n\t\t\t\t\t\tnavigator.clipboard.writeText(shareURL)\n\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\ticon: 'success',\n\t\t\t\t\t\t\ttitle: 'Thanks! Share the URL copied to your clipboard with friends to see your meet-up radius',\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\n\t\t\t\t}} className=\"btn btn-primary\" type=\"button\">\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t}\n\n\treturn <>\n\t\t<label className=\"block text-gray-700 font-semibold text-sm mb-2 w-full text-center\">\n\t\t\tShare this URL with friends to share your meetup radius\n\t\t</label>\n\t\t<div className=\"w-full flex items-center\">\n\n\t\t\t<input className=\"shadow appearance-none border rounded w-full mr-2 py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\"\n\t\t\t\tid=\"shareURL\" type=\"text\" readOnly={true}\n\t\t\t\tvalue={shareURL}\n\t\t\t/>\n\t\t\t<button onClick={() => {\n\t\t\t\tnavigator.clipboard.writeText(shareURL)\n\t\t\t\tsetCopied(true)\n\t\t\t}} className=\"btn btn-primary\" type=\"button\">\n\t\t\t\t{copied ? \"Copied\" : \"Copy\"}\n\t\t\t</button>\n\t\t</div>\n\t</>\n}","const FriendListItem = ({ friend, removeFriend }) => {\n\n\treturn <li>\n\t\t<span className=\"text-xl\" style={{ \"color\": friend.color }}>●&nbsp;</span>{friend.name}\n\t\t<span onClick={() => removeFriend(friend)}\n\t\t\tclassName=\"text-right text-lg cursor-pointer\" title=\"Remove friend\" > × </span>\n\t</li>\n}\nexport default ({ friends, removeFriend }) => {\n\n\tif(friends.length === 0) {\n\t\treturn <div />\n\t}\n\n\treturn (<div className=\"text-left\">\n\t\t<label className=\"mt-8 block text-gray-700 font-bold mb-2 text-sm\">\n\t\t\tFriends\n\t\t</label>\n\t\t<div className=\"w-full\">\n\t\t\t<ul>\n\t\t\t\t{friends.map(friend => <FriendListItem key={friend.id} removeFriend={removeFriend} friend={friend} />)}\n\n\t\t\t</ul>\n\t\t</div>\n\t</div>)\n}","\nexport default ({ allowedDistanceRadius, setAllowedDistanceRadius }) => {\n\n\treturn <div className=\"w-full text-left\">\n\t\t<label className=\"mt-8 block text-gray-700 text-sm font-bold mb-2\">\n\t\t\tRadius allowed to travel\n\t\t</label>\n\t\t<div className=\"w-full\">\n\n\t\t\t<input className=\"shadow appearance-none border rounded w-24 mr-2 py-2 px-3 leading-tight focus:outline-none focus:shadow-outline\"\n\t\t\t\tid=\"shareURL\" type=\"number\" \n\t\t\t\tonChange={(e) => { return setAllowedDistanceRadius(Number.parseInt(e.target.value)*1000)}}\n\t\t\t\tvalue={allowedDistanceRadius/1000}\n\t\t\t/>\n\t\t\t<span>Km</span>\n\t\t</div>\n\t</div>\n}","\n\nexport default () => <div className=\"text-sm w-full text-left mt-8 text-gray-500\">\n<label className=\"mt-8 block font-bold mb-2\">\n\t\t\tNote: \n\t\t</label>\n\t\t<div className=\"w-full p-4\">\n\t\t<ul className=\"list-disc list-outside\">\n\t\t\t\t<li>Locations may not be precise and are rounded to a precision of ~100m</li>\n\t\t\t\t<li>Your location data is private and is not stored on our servers. It is stored on your web browser</li>\n\t\t\t\t<li>This website may not be updated for the latest regulations</li>\n\t\t\t<li>Contact: georgecameronpersonal @ (popular email service run by Google) </li>\n\t\t\t</ul>\n\t\t</div>\n</div>","import { getRandomColor } from \"./GeneralUtils\";\n\nexport const withoutFriend = ({ friends, friendToRemove }) => friends.filter(friend => friend.id !== friendToRemove.id)\n\n\nexport const addFriendFromURL = ({ user, friends, setFriends }) => {\n\tconst urlGetParams = new URLSearchParams(window.location.search);\n\t//return unless has new Friend id\n\tconst newFriendId = urlGetParams.get('id')\n\tif (!newFriendId || newFriendId === user?.id || friends.filter(friend => friend.id === newFriendId).length > 0) {\n\t\treturn;\n\t}\n\n\tconst generatedRandomColor = getRandomColor()\n\t\n\tconst newFriend = {\n\t\tid: urlGetParams.get('id'),\n\t\tname: urlGetParams.get('name'),\n\t\tcolor: generatedRandomColor,\n\t\tlocation: {\n\t\t\tlat: Number.parseFloat(urlGetParams.get('lat')),\n\t\t\tlng: Number.parseFloat(urlGetParams.get('lng')),\n\t\t}\n\t}\n\tconsole.log('newFriend', newFriend)\n\tsetFriends([...friends, newFriend])\n}","\n\n\nexport const getRandomColor = () => {\n\tvar letters = '0123456789ABCDEF';\n\tvar color = '#';\n\tfor (var i = 0; i < 6; i++) {\n\t\tcolor += letters[Math.floor(Math.random() * 16)];\n\t}\n\treturn color;\n}\n\n","import { useMapEvents } from 'react-leaflet';\nimport shortid from 'shortid'\nimport {useState, useEffect} from 'react'\n\nexport const GoToUser = ({ setUser, user }) => {\n\tconst [hasCentered, setHasCentered] = useState(false)\n\tconst map = useMapEvents({\n\t\tclick: () => {\n\t\t\t\tmap.locate()\n\t\t},\n\t\tlocationfound: async (e) => {\n\t\t\tif (!hasCentered) {\n\t\t\t\tmap.panTo(e.latlng, map.getZoom())\n\t\t\t\tsetHasCentered(true)\n\t\t\t}\n\t\t\t\n\t\t\tif (user?.location) {\n\t\t\t\t// User already set\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst userLat = Number.parseFloat(e.latlng.lat).toFixed(3)\n\t\t\tconst userLng = Number.parseFloat(e.latlng.lng).toFixed(3)\n\n\t\t\tsetUser({\n\t\t\t\tid: shortid.generate(),\n\t\t\t\tlocation: {\n\t\t\t\t\tlat: userLat,\n\t\t\t\t\tlng: userLng\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t})\n\n\n\tuseEffect(() => {\n\t  map.locate()\n\t}, [map])\n\n\treturn null\n}","\nconst localDB = window.localStorage\n\n\nexport const getFromStorage = (key, defaultValue) => JSON.parse(localDB.getItem(key)) || defaultValue\n\nexport const setStateAndStore = (key, value, setStateFunction) => {\n\tlocalDB.setItem(key, JSON.stringify(value))\n\tsetStateFunction(value)\n}","import { useState, useEffect } from 'react'\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport PersonLocation from './components/PersonLocation'\nimport UserShareComponent from './components/UserShareComponent'\nimport FriendsListComponent from './components/FriendsListComponent'\nimport MeetUpRadiusComponent from './components/MeetUpRadiusComponent'\nimport AdditionalNotesTextComponent from './components/AdditionalNotesTextComponent'\nimport { withoutFriend, addFriendFromURL } from './utils/Friends'\nimport { GoToUser } from './utils/MapUtils'\nimport { getFromStorage, setStateAndStore } from './utils/DataStorage'\nimport { defaultMapCenter } from './config'\n\nfunction App() {\n  const [allowedDistanceRadius, setAllowedDistanceRadiusState] = useState(getFromStorage('allowedDistanceRadius', 5000)) //radius of circle in metres\n  const [user, setUserState] = useState(getFromStorage('user', null))\n  const [friends, setFriendsState] = useState(getFromStorage('friends', []))\n  console.log(\"friends\", friends)\n\n  const setAllowedDistanceRadius = (value) => setStateAndStore('allowedDistanceRadius', value, setAllowedDistanceRadiusState)\n  const setUser = (value) => setStateAndStore('user', value, setUserState)\n  const setFriends = (value) => setStateAndStore('friends', value, setFriendsState)\n\n  useEffect(() => {\n    addFriendFromURL({ user: user, friends: friends, setFriends: setFriends})\n  }, [user, friends])\n\n  console.log(\"user\", user)\n  console.log(\"friends\", friends)\n\n  const userLoaded = user !== null\n\n  const removeFriend = friendToRemove => setFriends(withoutFriend({ friends: friends, friendToRemove: friendToRemove }))\n\n  return (\n    <div className=\"App h-screen w-full bg-gray-100 grid grid-cols-5\">\n      <div className=\"  col-span-5 md:col-span-1 p-2 pb-8\">\n        <h1 className=\"mt-4 mb-4 bold text-center w-full\">\n          COVID Meetup Radius\n        </h1>\n        <p className=\"mb-8 italic text-center w-full text-sm\">\n          Find which friends are within your {allowedDistanceRadius/1000}Km radius and where you can go for outdoor exercise\n        </p>\n\n        {userLoaded ?\n          <UserShareComponent allowedDistanceRadius={allowedDistanceRadius} setUser={setUser} user={user} />\n          : null}\n        <FriendsListComponent removeFriend={removeFriend} friends={friends} />\n        <MeetUpRadiusComponent allowedDistanceRadius={allowedDistanceRadius} setAllowedDistanceRadius={setAllowedDistanceRadius} />\n\n        <AdditionalNotesTextComponent />\n      </div>\n      <div className=\"h-screen  col-span-5 md:col-span-4\">\n        <MapContainer className=\"h-full w-full\" center={defaultMapCenter} zoom={13} >\n\n          <GoToUser user={user} setUser={(v) => setUser(v)} />\n\n          {userLoaded ?\n            <PersonLocation allowedDistanceRadius={allowedDistanceRadius} color={'orange'} user={true} location={user.location} name=\"Your location\" />\n            : null}\n\n          {friends.map(friend => <PersonLocation key={friend.id}\n            color={friend.color}\n            allowedDistanceRadius={allowedDistanceRadius} user={false} location={friend.location} name={friend.name} />)}\n\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n        </MapContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}